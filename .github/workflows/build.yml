name: CICD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
# Ensure GO is installed    
    - name: Setup Golang
      uses: actions/setup-go@v3
      with:
        go-version: ~1.19

# Cache GO stuff
    - name: Setup Golang caches
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-golang-

# Set docker image names.
    - name: Setup env variables
      run: |
        echo "DOCKER_SERVICE=kvalitetsit/stakit-adapter-alertmanager" >> $GITHUB_ENV

# Checkout source code
    - uses: actions/checkout@v3

# if below step is skipped this build is a tag build. Can be used for skipping other steps.
    - name: Is Tag Build
      id: tag
      if:  ${{ startsWith(github.ref, 'refs/tags/v') }}
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Is Trunk Build
      id: trunk
      if:  ${{ !startsWith(github.ref, 'refs/tags/v') }}
      run: echo ::set-output name=VERSION::'0.0.0'

# Login to docker hub using secrets in GitHub.
    - name: Login to docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build 
      run: ./ci-build/build.sh

    - name: Integration test
      run: ./ci-build/integration-test.sh

    - name: Tag service dev docker image
      run: ./ci-build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:dev

    - name: Push service dev docker image
      run: ./ci-build/docker-push.sh ${{ env.DOCKER_SERVICE }}:dev

    - name: Tag service git id docker image
      run: ./ci-build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:${{ github.sha }}

    - name: Push service git id docker image.
      run: ./ci-build/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ github.sha }}

    - name: Push latest service docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./ci-build/docker-push.sh ${{ env.DOCKER_SERVICE }}:latest

    - name: Tag version service docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./ci-build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}

    - name: Push version service docker image.
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./ci-build/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}

    - name: Build and test helm chart
      run: ./ci-build/build-helm.sh stakit-adapter-alertmanager ${{ steps.tag.outputs.VERSION }} ${{ steps.trunk.outputs.VERSION }}

    - name: Create Release Notes
      uses: softprops/action-gh-release@v1
      if: ${{ steps.tag.conclusion != 'skipped' }}
      with:
        generate_release_notes: true